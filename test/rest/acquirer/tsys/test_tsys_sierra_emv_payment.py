from faker import Factory
from hamcrest import assert_that, instance_of, equal_to

from constants import PosDevice
from data.rest_requests import rest_emv_tlv_sale
from model.rest import transactionResponse, terminalType, serviceError
from wnclient import WNClient

fake = Factory.create()
wn = WNClient().vagrant.go
TERM_ID = '21006'


def test_tsys_discovery_tags_9F02_and_84():
    # ;6011208708888881=251210123456789?
    s = rest_emv_tlv_sale(device_type=PosDevice.WISEPAD.device_name, amount=5.51)
    s.paymentMethod.emvTlv.cardType = 'discover'
    s.account.terminalType = terminalType.CHP
    s.paymentMethod.emvTlv.tlvString = '4F07A00000015230108A025a31950500000000009B02E800C00A03000000000000000001C2820198B5AF08941651F9D95E4C584EB70F4B6E1B27EF1B943284CFDFB1024F130E66E2260993F5C5543E5300B8AD8C8CCC705D6221786B9FA176D9B5AD86133FAC905052D09A5FC780A8AC720B341B1A36ADA23D297016978A740256F795D5BC0F1F3E03AE3350372E59697D5D7FCFE66B9D08BDC8C066B3B6673611C41F19CDBE28BF6006F7DE688CDAD468373D88FBF0EFD47D00DCE42DE09567EA954E5BBC65A58EE4ED2497812A872A2A0909745F158CADB2502178CEC4C0597700A0B43C6EDD46CE2BFE584A47239BE2217DE85A14EB0C27299F6A415361C3731DAA30A0E042766F5FA6AE12D6DA81000243EF479CF9CAF5FF437ACE5DCF85DE9D4FE7F8843EACEFF32776A0849FF0770A993351F0B245A971C4480CD059D736EF180B6C82D96062BFF15AC6956221B785CABFDBDDDB6192C9B8E0CC3FE021C0D080D1469269A4FF03F3E959F377ABCC99A57C7BBA360886183612EEE42D6E428C64FBDBE37E8DC2A21A8A119BA7455078FA4FE9217C3981911023B3FB3F160A54C90C80B7CBF1EBD74ED1E0AAC435E0F5827C65E1B8E597141CC199F190AFC408541333ffffff0681C70A88828888888888e00174C81860d743c93014856dbed7bd9815914b4bc32f47e76c53b006CD082a2a18971dcafc43CE0A88858888888888e0026f5F20084A6F686E20446F655F24031912319F02060000000551009F03060000000000009F120A4d6173746572436172649F1C04000010119F260834B5A31A929FFF8B9F2701809F42020840DF780703000000000000DF791000003300b135ff832636454e1f000830'
    s.paymentMethod.emvTlv.ksn = '03000000000000000001'
    response = wn.rest(TERM_ID).sale(request=s)
    assert_that(response, instance_of(transactionResponse))
    assert_that(response.code, equal_to('A'))
    '''Apr 16 15:43:34 vkapp1 nettraxion[15784] ﻿2021-04-16 15:43:34,878 DEBUG [YHmiln8AAQEAAAVNMl4AAAAH]
    [default task-47] [com.merchant.bank.tsys.TSYSAuth] - TLV - T [ 9F02 ], L [ 06 ], V [ 000000055100 ]
    ...
    Apr 16 15:43:34 vkapp1 nettraxion[15784] ﻿2021-04-16 15:43:34,878 DEBUG [YHmiln8AAQEAAAVNMl4AAAAH] 
    [default task-47] [com.merchant.bank.tsys.TSYSAuth] - TLV - T [ 84 ], L [ 07 ], V [ a0000001523010 ]
    '''


def test_tsys_discovery_tag_9F02_absent():
    s = rest_emv_tlv_sale(device_type=PosDevice.WISEPAD.device_name, amount=5.52)
    s.paymentMethod.emvTlv.cardType = 'discover'
    s.account.terminalType = terminalType.CHP
    s.paymentMethod.emvTlv.tlvString = '4F07A00000015230108A025a31950500000000009B02E800C00A03000000000000000001C2820198B5AF08941651F9D95E4C584EB70F4B6E815976130FCDAA40D1DD5AD4871EFAAA0D4E640D7D1E470696500265DFD82D4FFDC51BCF1BCDF29C84A89D2897007AF216F1EB0FA04EC5CB7E2B7B91629D4EE722493E64C4B54B76669BD0FF7C527639FA692BA8E61C367376DE041A0D5E43E30319838AE191B6C72FBA692E7C968497376DD573B51D1F8C3EA0455B3EE0EEE4841F2C62F865BC92D2F1DD633CE03087EF0E4C90E563BD4CBECA8B9048A529AEF7228285194F4472F33924B6BB79EB6765319E810F5278AA8CEF538AC90A2026EBC6C0BE9BD8F9677C3879156BD675BFD8071C19A2BA2CE2142E851EB1D3170A1BCB58CBB42EDEEC1A88B45DFA04768C18115EB6436682226C2B8EE719B55471818EC27F709C6ABD8FB57E5E991D23935C8356AC5A3CA089A10D91E9A83252F95B933607B8C8B7D7797FA9E8F6C0C6BA69083E805F026EA1F4D130DBD754B9138AC92B38A91770ADE1D9263CF634030C6F10B389C5A5B2B3029E2CD63D31E4B360505427240E76E3504E09791524947415024145B2EE16234CB8FCC77A6EB0210B85050C9E18BD4AC408541333ffffff0681C70A88828888888888e00174C81860d743c93014856dbed7bd9815914b4bc32f47e76c53b006CD082a2a18971dcafc43CE0A88858888888888e0026f5F20084A6F686E20446F655F24031912319F03060000000000009F120A4d6173746572436172649F1C04000010119F26086113006316DD45599F2701809F42020840DF780703000000000000DF791000003300b135ff832636454e1f000830'
    s.paymentMethod.emvTlv.ksn = '03000000000000000001'
    response = wn.rest(TERM_ID).sale(request=s)
    assert_that(response, instance_of(serviceError))
    assert_that(response.message, equal_to('The following mandatory EMV tags are missing: 9F02'))
    '''Apr 16 13:24:15 vkapp1 nettraxion[15784] ﻿2021-04-16 13:24:15,496 ERROR [YHmB738AAQEAAAVOEQgAAAAZ] 
    [default task-1] [com.merchant.ejb.TransactionProcessorBean] - Terminal 21006, order Id 'REST_1043086'. 
    The following mandatory EMV tags are missing: 9F02'''


def test_tsys_discovery_tag_84_absent():
    s = rest_emv_tlv_sale(device_type=PosDevice.WISEPAD.device_name, amount=5.53)
    s.paymentMethod.emvTlv.cardType = 'discover'
    s.account.terminalType = terminalType.CHP
    s.paymentMethod.emvTlv.tlvString = '4F07A00000015230108A025a31950500000000009B02E800C00A03000000000000000001C2820190B5AF08941651F9D95E4C584EB70F4B6E815976130FCDAA40D1DD5AD4871EFAAA0D4E640D7D1E470696500265DFD82D4FFDC51BCF1BCDF29C103890C5EAB24DAC4E1CCA5D81A57439FC9B956A1B7D1FB6FA6348B8D1AD3C0B4772907F3117806968C547980A537570C3455BAAE06D1913D052E0EA48B9DF1D358D8F5139487D107946F09C97B5D361DBA647A946B3996F9996AEDFB3BFDB8846A50CC612CA58B92F04B1AEC3F28547701AF31FC1C35DF34F7164B23BCD34A2CAE3634479FE8AA1DE46ACA0A135F9CDFD05F0C4F396FA42CF3579301CA918C0ABE87E13EBD83876F972A2359E7D33754D6422396D7D36D9595A42BD8C46D566BCF7EBF313292FCBA2DDA0388C4B6323B00415134227DB6BCB81CE6527131663A36EA999B6910DAE896755870B01555B06371181E46FCA7DF55178CE20C1DAE43E163CA02EFA8959A093E6E95CE349A6DCB45022F2D1D99E9413666F409276B1B9CBCD34249249869254ADA2311B425151675F783A9183753D30795BE66C7D52EB619959DC76AEFF93A7A5709E29F126A1FB20661DAA2214C408541333ffffff0681C70A88828888888888e00174C81860d743c93014856dbed7bd9815914b4bc32f47e76c53b006CD082a2a18971dcafc43CE0A88858888888888e0026f5F20084A6F686E20446F655F24031912319F02060000000553009F03060000000000009F120A4d6173746572436172649F1C04000010119F2608565FF40E5D1FEB179F2701809F42020840DF780703000000000000DF791000003300b135ff832636454e1f000830'
    s.paymentMethod.emvTlv.ksn = '03000000000000000001'
    response = wn.rest(TERM_ID).sale(request=s)
    assert_that(response, instance_of(serviceError))
    assert_that(response.message, equal_to('The following mandatory EMV tags are missing: 84'))
    '''Apr 16 15:40:46 vkapp1 nettraxion[15784] ﻿2021-04-16 15:40:46,237 ERROR [YHmh7n8AAQEAAAVNMl0AAAAD] 
    [default task-47] [com.merchant.ejb.TransactionProcessorBean] - Terminal 21006, order Id 'REST_9012322'. 
    The following mandatory EMV tags are missing: 84'''

