import random

from faker import Factory
from hamcrest import assert_that, instance_of, equal_to

from constants import TransactionType, TerminalType, StoredCredentialTxType, StoredCredentialUse, SecureCard, Currency
from data.xml_requests import payment_avs, payment, payment_applepay_visa, payment_chp, payment_securecard, \
    payment_google_pay
from model.gateway import PAYMENTRESPONSE, CUSTOMFIELD, REFUNDRESPONSE, CREDENTIALONFILE
from wnclient import WNClient

fake = Factory.create()
wn = WNClient().vagrant.go
TERM_ID = '21001'


def test_saratoga_google_pay_valid_mid():
    p = payment_google_pay()
    response = wn.xml(terminal_id=TERM_ID).payment(request=p)
    assert_that(response, instance_of(PAYMENTRESPONSE))


def test_saratoga_google_pay_invalid_mid():
    p = payment_google_pay()
    p.GOOGLEPAYLOAD = '7b2261706956657273696f6e4d696e6f72223a302c2261706956657273696f6e223a322c227061796d656e744d6574686f6444617461223a7b226465736372697074696f6e223a2256697361e28086e280a2e280a2e280a2e280a2e2808639313035222c22746f6b656e697a6174696f6e44617461223a7b2274797065223a225041594d454e545f47415445574159222c22746f6b656e223a227b5c227369676e61747572655c223a5c224d4551434942313470464d4e65504f664d5a67734263324e473337444e613958546469455252425353786350777a516f4169416c72367347507a3041344f76326f77724c666f784855626556494363556e2b485034524e764f6d6b6676515c5c75303033645c5c75303033645c222c5c2270726f746f636f6c56657273696f6e5c223a5c22454376315c222c5c227369676e65644d6573736167655c223a5c227b5c5c5c22656e637279707465644d6573736167655c5c5c223a5c5c5c2239634478322f46647342657a364e4763355774556c7239614b316967537558743733575a4d502f2f4c49446d3935373650514f49356a5a304a65694f6b7a744b543875424e587930386835533168506e6578567a64474638733978382b486b625a583235454e4c324d2b486d67752b7971754d62785638685071714c57713547693176434e2b4e576d7a4a776745755759464d7364616377664f4c4a497a46415776395065634e7548444c58486830592f4650422b634a6949694b38306b3670724b56544730656776516f3274656958436a73696d326c776961366e365a34653355334f7973575172474e364d514242326d68446a42616f376f696f5a326d377134782f37717459496d527769622b724b6471566e375258652f337a78594168752f596e4a44694a325069684d676a664a51326f514a2f352b64387174516d674e64327a7a533334474b33737974334e4974695a64444161346d6c58486a7a79356747766b69584f53675477314c6d524a77655253446a776c6437416c642b747649364f4b756d6c736e77526f574c41546f3054747a534a7a2b5a673967684a4a6a55527a78596c6f4f5563675a6b39356e4b395161754c45624e59756632466f50627152556673776a36685c5c5c222c5c5c5c22657068656d6572616c5075626c69634b65795c5c5c223a5c5c5c224245342f3030446d6d474a6f74477552593966466d356e515275647952574151524b724669696a526733794f694a65767a4e5454334e425a714c34764c55724b67506c622f6a4844495a3164515876516f2f7a703054775c5c5c5c75303033645c5c5c222c5c5c5c227461675c5c5c223a5c5c5c22455639614b7474544e343249536849635779503053764142516a656e5156694f2b58696b3833306471636b5c5c5c5c75303033645c5c5c227d5c227d227d2c2274797065223a2243415244222c22696e666f223a7b22636172644e6574776f726b223a2256495341222c226361726444657461696c73223a2239313035222c2262696c6c696e6741646472657373223a7b2270686f6e654e756d626572223a222b333533203837203230342039323939222c226164647265737333223a22222c22736f7274696e67436f6465223a22222c226164647265737332223a22222c22636f756e747279436f6465223a224945222c226164647265737331223a223231204b696c6b656e6e7920526f6164222c22706f7374616c436f6465223a22222c226e616d65223a22526f62626965204c796e6368222c226c6f63616c697479223a22436173746c65636f6d6572222c2261646d696e69737472617469766541726561223a22436f2e204b696c6b656e6e79227d7d7d7d'
    response = wn.xml(terminal_id=TERM_ID).payment(request=p)
    assert_that(response, instance_of(PAYMENTRESPONSE))
