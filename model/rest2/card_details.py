# coding: utf-8
from model.rest2 import UpdatablePayload


class CardDetails(UpdatablePayload):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cardholder_name': 'str',
        'card_number': 'str',
        'expiry_date': 'str',
        'cvv': 'str',
        'issue_number': 'str'
    }
    if hasattr(UpdatablePayload, "swagger_types"):
        swagger_types.update(UpdatablePayload.swagger_types)

    attribute_map = {
        'cardholder_name': 'cardholderName',
        'card_number': 'cardNumber',
        'expiry_date': 'expiryDate',
        'cvv': 'cvv',
        'issue_number': 'issueNumber'
    }
    if hasattr(UpdatablePayload, "attribute_map"):
        attribute_map.update(UpdatablePayload.attribute_map)

    def __init__(self, cardholder_name=None, card_number=None, expiry_date=None, cvv=None, issue_number=None, *args, **kwargs):  # noqa: E501
        """CardDetails - a model defined in Swagger"""  # noqa: E501
        self._cardholder_name = None
        self._card_number = None
        self._expiry_date = None
        self._cvv = None
        self._issue_number = None
        self.discriminator = None
        if cardholder_name is not None:
            self.cardholder_name = cardholder_name
        if card_number is not None:
            self.card_number = card_number
        if expiry_date is not None:
            self.expiry_date = expiry_date
        if cvv is not None:
            self.cvv = cvv
        if issue_number is not None:
            self.issue_number = issue_number
        UpdatablePayload.__init__(self, *args, **kwargs)

    @property
    def cardholder_name(self):
        """Gets the cardholder_name of this CardDetails.  # noqa: E501

        The cardholder's name as it appears on the card.  # noqa: E501

        :return: The cardholder_name of this CardDetails.  # noqa: E501
        :rtype: str
        """
        return self._cardholder_name

    @cardholder_name.setter
    def cardholder_name(self, cardholder_name):
        """Sets the cardholder_name of this CardDetails.

        The cardholder's name as it appears on the card.  # noqa: E501

        :param cardholder_name: The cardholder_name of this CardDetails.  # noqa: E501
        :type: str
        """

        self._cardholder_name = cardholder_name

    @property
    def card_number(self):
        """Gets the card_number of this CardDetails.  # noqa: E501

        The card number, as a string without any separators.  # noqa: E501

        :return: The card_number of this CardDetails.  # noqa: E501
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number):
        """Sets the card_number of this CardDetails.

        The card number, as a string without any separators.  # noqa: E501

        :param card_number: The card_number of this CardDetails.  # noqa: E501
        :type: str
        """

        self._card_number = card_number

    @property
    def expiry_date(self):
        """Gets the expiry_date of this CardDetails.  # noqa: E501

        The card's expiration date in the format `MMYY`.  # noqa: E501

        :return: The expiry_date of this CardDetails.  # noqa: E501
        :rtype: str
        """
        return self._expiry_date

    @expiry_date.setter
    def expiry_date(self, expiry_date):
        """Sets the expiry_date of this CardDetails.

        The card's expiration date in the format `MMYY`.  # noqa: E501

        :param expiry_date: The expiry_date of this CardDetails.  # noqa: E501
        :type: str
        """

        self._expiry_date = expiry_date

    @property
    def cvv(self):
        """Gets the cvv of this CardDetails.  # noqa: E501

        The card's security code.  # noqa: E501

        :return: The cvv of this CardDetails.  # noqa: E501
        :rtype: str
        """
        return self._cvv

    @cvv.setter
    def cvv(self, cvv):
        """Sets the cvv of this CardDetails.

        The card's security code.  # noqa: E501

        :param cvv: The cvv of this CardDetails.  # noqa: E501
        :type: str
        """

        self._cvv = cvv

    @property
    def issue_number(self):
        """Gets the issue_number of this CardDetails.  # noqa: E501

        The card's issue number.  # noqa: E501

        :return: The issue_number of this CardDetails.  # noqa: E501
        :rtype: str
        """
        return self._issue_number

    @issue_number.setter
    def issue_number(self, issue_number):
        """Sets the issue_number of this CardDetails.

        The card's issue number.  # noqa: E501

        :param issue_number: The issue_number of this CardDetails.  # noqa: E501
        :type: str
        """

        self._issue_number = issue_number