# coding: utf-8
from model.serializable import SwaggerSerializable


class StoreCredentialsRequest(SwaggerSerializable):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'terminal': 'str',
        'operator': 'str',
        'merchant_reference': 'str',
        'ip_address': 'IpAddress',
        'customer': 'Customer',
        'customer_account': 'Payload',
        'additional_data_fields': 'list[CustomField]'
    }

    attribute_map = {
        'terminal': 'terminal',
        'operator': 'operator',
        'merchant_reference': 'merchantReference',
        'ip_address': 'ipAddress',
        'customer': 'customer',
        'customer_account': 'customerAccount',
        'additional_data_fields': 'additionalDataFields'
    }

    def __init__(self, terminal=None, operator=None, merchant_reference=None, ip_address=None, customer=None, customer_account=None, additional_data_fields=None):  # noqa: E501
        """StoreCredentialsRequest - a model defined in Swagger"""  # noqa: E501
        self._terminal = None
        self._operator = None
        self._merchant_reference = None
        self._ip_address = None
        self._customer = None
        self._customer_account = None
        self._additional_data_fields = None
        self.discriminator = None
        self.terminal = terminal
        if operator is not None:
            self.operator = operator
        if merchant_reference is not None:
            self.merchant_reference = merchant_reference
        if ip_address is not None:
            self.ip_address = ip_address
        if customer is not None:
            self.customer = customer
        self.customer_account = customer_account
        if additional_data_fields is not None:
            self.additional_data_fields = additional_data_fields

    @property
    def terminal(self):
        """Gets the terminal of this StoreCredentialsRequest.  # noqa: E501

        The terminal number assigned by the gateway. This field indicates the terminal that owns the credentials, even though, it is possible to share credentials with other terminals.See the *Secure Card* section in [Integration Settings](https://docs.worldnettps.com/doku.php?id=developer:important_integration_settings) for more details about secure credentials sharing feature.  # noqa: E501

        :return: The terminal of this StoreCredentialsRequest.  # noqa: E501
        :rtype: str
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """Sets the terminal of this StoreCredentialsRequest.

        The terminal number assigned by the gateway. This field indicates the terminal that owns the credentials, even though, it is possible to share credentials with other terminals.See the *Secure Card* section in [Integration Settings](https://docs.worldnettps.com/doku.php?id=developer:important_integration_settings) for more details about secure credentials sharing feature.  # noqa: E501

        :param terminal: The terminal of this StoreCredentialsRequest.  # noqa: E501
        :type: str
        """
        self._terminal = terminal

    @property
    def operator(self):
        """Gets the operator of this StoreCredentialsRequest.  # noqa: E501

        The operator who initiated the transaction. If not sent in the request, this field will be automatically populated with the API Key alias.  # noqa: E501

        :return: The operator of this StoreCredentialsRequest.  # noqa: E501
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this StoreCredentialsRequest.

        The operator who initiated the transaction. If not sent in the request, this field will be automatically populated with the API Key alias.  # noqa: E501

        :param operator: The operator of this StoreCredentialsRequest.  # noqa: E501
        :type: str
        """

        self._operator = operator

    @property
    def merchant_reference(self):
        """Gets the merchant_reference of this StoreCredentialsRequest.  # noqa: E501

        Unique merchant reference that identifies the stored credentials on both platforms.<br />If not provided, we will assign an auto-generated value to the credentials and returns it in the response.  # noqa: E501

        :return: The merchant_reference of this StoreCredentialsRequest.  # noqa: E501
        :rtype: str
        """
        return self._merchant_reference

    @merchant_reference.setter
    def merchant_reference(self, merchant_reference):
        """Sets the merchant_reference of this StoreCredentialsRequest.

        Unique merchant reference that identifies the stored credentials on both platforms.<br />If not provided, we will assign an auto-generated value to the credentials and returns it in the response.  # noqa: E501

        :param merchant_reference: The merchant_reference of this StoreCredentialsRequest.  # noqa: E501
        :type: str
        """

        self._merchant_reference = merchant_reference

    @property
    def ip_address(self):
        """Gets the ip_address of this StoreCredentialsRequest.  # noqa: E501


        :return: The ip_address of this StoreCredentialsRequest.  # noqa: E501
        :rtype: IpAddress
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this StoreCredentialsRequest.


        :param ip_address: The ip_address of this StoreCredentialsRequest.  # noqa: E501
        :type: IpAddress
        """

        self._ip_address = ip_address

    @property
    def customer(self):
        """Gets the customer of this StoreCredentialsRequest.  # noqa: E501


        :return: The customer of this StoreCredentialsRequest.  # noqa: E501
        :rtype: Customer
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this StoreCredentialsRequest.


        :param customer: The customer of this StoreCredentialsRequest.  # noqa: E501
        :type: Customer
        """

        self._customer = customer

    @property
    def customer_account(self):
        """Gets the customer_account of this StoreCredentialsRequest.  # noqa: E501


        :return: The customer_account of this StoreCredentialsRequest.  # noqa: E501
        :rtype: Payload
        """
        return self._customer_account

    @customer_account.setter
    def customer_account(self, customer_account):
        """Sets the customer_account of this StoreCredentialsRequest.


        :param customer_account: The customer_account of this StoreCredentialsRequest.  # noqa: E501
        :type: Payload
        """
        if customer_account is None:
            raise ValueError("Invalid value for `customer_account`, must not be `None`")  # noqa: E501

        self._customer_account = customer_account

    @property
    def additional_data_fields(self):
        """Gets the additional_data_fields of this StoreCredentialsRequest.  # noqa: E501

        List of custom fields which are used to add extra information to stored credentials. Their values are going to be stored and used for the requests sent to the terminal's receipt and validation webhooks.<br />To understand more visit the section regarding [Special Fields and Parameters](https://docs.worldnettps.com/doku.php?id=developer:api_specification:special_fields_and_parameters).  # noqa: E501

        :return: The additional_data_fields of this StoreCredentialsRequest.  # noqa: E501
        :rtype: list[CustomField]
        """
        return self._additional_data_fields

    @additional_data_fields.setter
    def additional_data_fields(self, additional_data_fields):
        """Sets the additional_data_fields of this StoreCredentialsRequest.

        List of custom fields which are used to add extra information to stored credentials. Their values are going to be stored and used for the requests sent to the terminal's receipt and validation webhooks.<br />To understand more visit the section regarding [Special Fields and Parameters](https://docs.worldnettps.com/doku.php?id=developer:api_specification:special_fields_and_parameters).  # noqa: E501

        :param additional_data_fields: The additional_data_fields of this StoreCredentialsRequest.  # noqa: E501
        :type: list[CustomField]
        """

        self._additional_data_fields = additional_data_fields
